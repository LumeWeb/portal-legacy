include /etc/nginx/conf.d/include/init-optional-variables;

location / {
    set $skylink "";
    set $path $uri;
    set $content_hash_type "";
    set $content_hash "";
    set $proxy_url "";

    rewrite_by_lua_block {

        if ngx.var.args == nil then
            ngx.var.args = ''
        end
        if ngx.var.http_x_content_hash then
            if ngx.var.http_x_content_hash_type == 'ipfs' or ngx.var.http_x_content_hash_type == 'ipns' then
                ngx.var.content_hash_type = ngx.var.http_x_content_hash_type
                ngx.var.content_hash = ngx.var.http_x_content_hash
                if string.sub(ngx.var.path, -1) ~= "/" then
                    ngx.var.path =  ngx.var.path .. "/"
                end
                ngx.var.proxy_url = 'http://10.10.10.123:8080/' .. ngx.var.content_hash_type .. '/' .. ngx.var.content_hash ..  ngx.var.path ..  ngx.var.is_args .. ngx.var.args
                return
            end

            ngx.var.content_hash_type = 'skylink'
            ngx.var.skylink = require("skynet.skylink").parse(ngx.var.http_x_content_hash)
            ngx.var.skylink_v1 = ngx.var.skylink
            ngx.var.skylink_v2 = ngx.var.skylink
            ngx.var.content_hash = ngx.var.skylink_v1
            ngx.var.proxy_url = 'http://sia:9980/skynet/skylink/' .. ngx.var.content_hash ..  ngx.var.path ..  ngx.var.is_args .. ngx.var.args
            return
        end

        local cjson = require("cjson")
        local cache = ngx.shared.dnslink
        local cache_value = cache:get(ngx.var.host)

        if cache_value == nil then
            local httpc = require("resty.http").new()

            -- 10.10.10.55 points to dnslink-api service (alias not available when using resty-http)
            local res, err = httpc:request_uri("http://10.10.10.55:3100/dnslink/" .. ngx.var.host)

            if err or (res and res.status ~= ngx.HTTP_OK) then
                -- check whether we can fallback to regular skylink request
                local match_skylink = ngx.re.match(ngx.var.uri, "^/([a-zA-Z0-9-_]{46}|[a-z0-9]{55})(/.*)?")

                if match_skylink then
                    ngx.var.skylink = match_skylink[1]
                    ngx.var.path = match_skylink[2] or "/"
                else
                    ngx.status = (err and ngx.HTTP_INTERNAL_SERVER_ERROR) or res.status
                    ngx.header["content-type"] = "text/plain"
                    ngx.say(err or res.body)
                    ngx.exit(ngx.status)
                end
            else
                local resolved = cjson.decode(res.body)

                ngx.var.skylink = resolved.skylink

                if resolved.sponsor then
                    ngx.req.set_header("Skynet-Api-Key", resolved.sponsor)
                 end

                local cache_ttl = 300 -- 5 minutes cache expire time
                cache:set(ngx.var.host, ngx.var.skylink, cache_ttl)
            end
        else
            local resolved = cjson.decode(cache_value)

            ngx.var.skylink = resolved.skylink
            if resolved.sponsor then
                ngx.req.set_header("Skynet-Api-Key", resolved.sponsor)
            end
        end

        ngx.var.skylink = require("skynet.skylink").parse(ngx.var.skylink)
        ngx.var.skylink_v1 = ngx.var.skylink
        ngx.var.skylink_v2 = ngx.var.skylink
        ngx.var.content_hash = ngx.var.skylink_v1
        ngx.var.proxy_url = 'http://sia:9980/skynet/skylink/' .. ngx.var.content_hash ..  ngx.var.path ..  ngx.var.is_args .. ngx.var.args
    }

    include /etc/nginx/conf.d/include/location-skylink;

    proxy_redirect $skylink_v1 $skylink_v2;

    proxy_pass $proxy_url;
}
